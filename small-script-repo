#!/usr/bin/perl
# small-script-repo
# Copyright (C) 2016  Fabian Stiewitz <fabian.stiewitz@protonmail.ch>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use File::Basename;
use File::Spec::Functions;

die "No arguments specified" unless @ARGV;

my ($caller_path, $caller, $pwd);
if (-l $0) {
  die "readlink $0: $!" unless ($caller_path = readlink $0);
} else {
  $caller_path = $0;
}

$caller = basename $caller_path;
$pwd = dirname $caller_path;

if ($ARGV[0] eq "--list") {

  sub list_dir {
    my $pwd = shift;
    opendir DIR, $pwd || die "Cannot open $pwd: $!";
    foreach my $file (readdir DIR) {
      chomp $file;
      my $path = catdir($pwd, $file);
      next unless (-d $path) || (-f -x $path);
      next if ($file =~ /^\.|~$/);
      print $file . "\n";
    }
    closedir DIR;
    exit;
  }

  my @parts = splice @ARGV, 1;
  my $prev_pwd = $pwd;
  foreach my $part (@parts) {
    $pwd = catdir($pwd, $part);
    if (-e $pwd) {if (-f $pwd) {print $part, "\n"; exit;}}
    else {list_dir($prev_pwd);}
    $prev_pwd = $pwd;
  }
  list_dir($pwd);
} else {
  my $cmd = $pwd;
  my @cmd_args = @ARGV;
  foreach my $part (@ARGV) {
    $cmd = catdir($cmd, $part);
    shift @cmd_args;
    if (-f $cmd) {exec ($cmd, @cmd_args);}
    elsif (!-e $cmd) {die "Script/Folder $cmd does not exist";}
  }
  if (-d $cmd) {exec ($caller_path, '--list', @ARGV);}
  else {die "Script $cmd not found";}
}
